{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetail.js","components/auth/SignIn.js","components/auth/Register.js","components/projects/CreateProject.js","store/actions/ProjectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","catch","err","props","profile","console","log","react_default","a","createElement","className","NavLink","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","SignedInLinks","layout_SignedOutLinks","Link","Notifications","_ref","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","event","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","authError","creds","credentials","signInWithEmailAndPassword","Register","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","authorLastName","Date","payload","App","BrowserRouter","layout_Navbar","Switch","Route","path","component","Dasboard","exact","ProjectDetail","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","react_redux_es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3edbcc6.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport {signOut} from '../../store/actions/authActions'\nimport {connect} from 'react-redux'\n\nconst SignInLinks = (props) => {\n    const {profile} = props\n    console.log(profile)\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\" >New Project</NavLink></li>\n            <li><a onClick={props.signOut}  >Log out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignInLinks);\n","import { getFirestore } from \"redux-firestore\";\n\nexport const signIn = (credentials) =>{\n    return (dispatch, getState, {getFirebase}) =>{\n\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() =>{\n            dispatch({\n                type: \"LOGIN_SUCCESS\"\n\n            })\n        }).catch((err) =>{\n            dispatch({\n                type: \"LOGIN_ERROR\",\n                err\n            })\n        })\n    }\n}\n\nexport const signOut = () =>{\n    return(dispatch, getState, {getFirebase}) =>{\n        const firebase = getFirebase()\n        firebase.auth().signOut()\n        .then(() => dispatch({\n            type: \"SIGNOUT_SUCCESS\"\n        }))\n        .catch((err) => dispatch({\n            type: \"SIGNOUT_ERROR\",\n            err\n        }))\n    }\n}\n\nexport const signUp = (newUser) =>{\n    return(dispatch, getState, {getFirebase, getFirestore}) =>{\n        const firebase = getFirebase()\n        const firestore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res)=>{\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n\n            })\n        }).then(() =>{\n            dispatch({type: \"SIGNUP_SUCCESS\"})\n        })\n        .catch(err => {\n            dispatch({type: \"SIGNUP_ERROR\", err})\n        })\n    }\n}\n","import React from 'react';\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/login\" >Login</NavLink></li>\n            <li><NavLink to=\"/register\" >Register</NavLink></li>\n        </ul>\n    );\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport {connect} from 'react-redux'\n\n\nconst Navbar = (props) => {\n    const {auth, profile} = props\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">Friends Forum</Link>\n                {links}\n            </div>\n        </nav> \n    );\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment'\n\nconst Notifications = ({notifications}) => {\n    console.log(notifications)\n    return (\n        <div>\n            <div className=\"section\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">\n                            Notifications\n                        </span>\n                        <ul>\n                            {notifications && notifications.map((notification) => (\n                                <li key={notification.id}> \n                                    <span className=\"pink-text\">{notification.user} </span> \n                                    <span>{notification.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(notification.time.toDate()).fromNow()}\n                                    </div>\n\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">\n                    {project.title}\n                </span>\n                <p>{project.authorFirstName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n\n    return (\n        \n        <div className=\"project-list section \">\n            {projects && projects.map((project) =>{\n                return(\n                    <Link to={\"/project/\" + project.id} >\n                    <ProjectSummary project={project} key={project.id}/>\n                    </Link>\n                )\n            })}\n\n        </div>\n    );\n}\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport {connect } from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\n\nclass Dashboard extends Component {\n\n    render() {\n        const {projects, auth, notifications} = this.props\n\n        if(auth.uid){\n        return (\n            <div className=\"dashboard\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        );\n        }else{\n            return <Redirect to=\"/login\" />\n        }\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    console.log(state)\n    return{\n        projects : state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\n    ]))\n    (Dashboard);\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from \"react-router-dom\"\nimport moment from 'moment'\n\nconst ProjectDetail = (props) => {\n    const {project, auth} = props;\n    if(!auth.uid){return <Redirect  to=\"/login\"/>}\n    if(project){\n    return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        {project.title}\n                    </span>\n                    <p>{project.content}</p>\n                    <div className=\"card-action grey lighten-3 grey-text\">\n                        <div>{project.authorFirstName}</div>\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n    }else{\n        return(\n            <div className=\"container center\">\n                <p>Loading</p>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    const id = ownProps.match.params.id \n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return{\n        project: project,\n        auth: state.firebase.auth\n    }\n     \n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{\n        collection: \"projects\"\n    }])\n)(ProjectDetail);\n","import React, { Component } from 'react';\nimport {signIn} from '../../store/actions/authActions'\nimport {connect } from 'react-redux'\nimport {Redirect} from \"react-router-dom\"\n\nclass SignIn extends Component {\n\n    state ={\n        email: \"\",\n        password: \"\"\n    }\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.id] : event.target.value\n        })\n    }\n\n    handleSubmit = (event) =>{\n        event.preventDefault()\n        this.props.signIn(this.state)\n    }\n    \n\n    render() {\n        const {auth} = this.props\n        if(auth.uid){return <Redirect to=\"/\" />}\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Sign in\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {this.props.authError ? <p>{this.props.authError}</p>  : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst matchDispatchToProps = (dispatch) =>{\n    return{\n        signIn: (creds) => dispatch(signIn(creds))\n        \n        \n    }\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {signUp} from '../../store/actions/authActions'\n\n\nclass Register extends Component {\n\n    state ={\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.id] : event.target.value\n        })\n    }\n\n    handleSubmit = (event) =>{\n        event.preventDefault()\n        this.props.signUp(this.state)\n    }\n    \n\n    render() {\n        const {auth, authError} = this.props\n        if(auth.uid){return <Redirect to=\"/\" />}\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        Register\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Register</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, { Component } from 'react';\nimport {createProject} from '../../store/actions/ProjectActions'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\n\nclass CreateProject extends Component {\n    \n    state ={\n        title: \"\",\n        content: \"\"\n    }\n\n    handleChange = (event) =>{\n        this.setState({\n            [event.target.id] : event.target.value\n        })\n    }\n\n    handleSubmit = (event) =>{\n        event.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n    \n    \n    render() {\n        const {auth} = this.props\n        if(auth.uid){\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">\n                        New Project\n                    </h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        );}else{\n            return <Redirect to=\"/login\" />\n        }\n    }\n}\n\nconst matchStateToProps = (state) =>{\n    return{\n        auth: state.firebase.auth\n    }\n}\n\nconst matchDispatchToProps = (dispatch)=>{\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(matchStateToProps, matchDispatchToProps)(CreateProject);\n","export const createProject  = (project) =>{\n    return(dispatch, getState, {getFirebase, getFirestore}) =>{\n        //make async call to database \n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        console.log(profile)\n        const authorId = getState().firebase.auth.uid\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName : profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        })\n        .then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                payload: project\n            })\n        })\n        .catch((err) =>{\n            dispatch({\n                type: \"CREATE_PROJECT_ERROR\",\n                err\n            })\n        })\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dasboard from './components/dashboard/Dashboard'\nimport ProjectDetail from './components/projects/ProjectDetail'\nimport SignIn from './components/auth/SignIn'\nimport Register from './components/auth/Register'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" component={Dasboard} exact />\n            <Route path=\"/create\" component={CreateProject} />\n            <Route path=\"/project/:id\" component={ProjectDetail} />\n            <Route path=\"/login\" component={SignIn} />\n            <Route path=\"/register\" component={Register} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\n\nconst authReducer = (state=initState, action) => {\n\n    switch(action.type){\n        case \"LOGIN_ERROR\":\n            return{\n                ...state, \n                authError: \"Login fail\"\n            }\n        case \"LOGIN_SUCCESS\":\n           \n            return {\n                ...state, \n                authError: null\n            }\n        \n        case  \"SIGNOUT_SUCCESS\":\n            \n            return state\n\n        case \"SIGNUP_SUCCESS\":\n          \n            return{\n                ...state,\n                authError: null\n            }\n\n        case \"SIGNUP_ERROR\":\n            console.log('sign up ERROR', action.err)\n            return{\n                ...state,\n                authError: action.err.message\n            \n        }\n        \n        default:\n            return state\n    }\n\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: \"1\", title:\"Hello\", content: \"This is how we do it\"},\n        {id: \"2\", title:\"bye\", content: \"This is hoewew we wefwefdo it\"},\n        {id: \"3\", title:\"Yo\", content: \"Come over to we do it\"},\n    ]\n}\n\nconst projectReducer = (state=initState, action) => {\n\n    switch(action.type){\n        case \"CREATE_PROJECT\":\n            console.log('created project', action.payload)\n            return state;\n        case \"CREATE_PROJECT_ERROR\":\n            console.log('created project error', action.err)\n            return state\n        default:\n            return state\n\n\n    }       \n\n}\n   \nexport default projectReducer","import {combineReducers} from 'redux'\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","  import firebase from 'firebase/app'\n  import 'firebase/firestore'\n  import 'firebase/auth'\n\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyA7X0AamL2uYhRwkKoz6Azei2zATy-NQEI\",\n    authDomain: \"project-manager-dev.firebaseapp.com\",\n    databaseURL: \"https://project-manager-dev.firebaseio.com\",\n    projectId: \"project-manager-dev\",\n    storageBucket: \"\",\n    messagingSenderId: \"630199868130\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true})\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport './index.css'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users',  attachAuthIsReady: true})\n    ))\n\nstore.firebaseAuthIsReady.then(() => {\n\n    ReactDOM.render(\n        <Provider store={store}><App /></Provider>, \n        document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n})\n\n\n"],"sourceRoot":""}